
avr bldc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000005a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000052e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800200  00800200  000005a2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000614  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001aaf  00000000  00000000  000006ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f10  00000000  00000000  0000215b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007ec  00000000  00000000  0000306b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f4  00000000  00000000  00003858  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000758  00000000  00000000  0000394c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000959  00000000  00000000  000040a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  000049fd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a2 30       	cpi	r26, 0x02	; 2
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	b9 d1       	rcall	.+882    	; 0x478 <main>
 106:	11 c2       	rjmp	.+1058   	; 0x52a <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <_ZN8CAvrBldc4initEv>:

#include "AvrBldc.h"

CAvrBldc bldc;

void CAvrBldc::init(){
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
	// PWM output of the mosfet gate driver
	DDRE=0x38;
 10e:	88 e3       	ldi	r24, 0x38	; 56
 110:	8d b9       	out	0x0d, r24	; 13
	DDRH=0x38;
 112:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
	
	// HAL input from BLDC
	DDRB=0x00;
 116:	14 b8       	out	0x04, r1	; 4
	
	GTCCR|=1<<7;
 118:	83 b5       	in	r24, 0x23	; 35
 11a:	80 68       	ori	r24, 0x80	; 128
 11c:	83 bd       	out	0x23, r24	; 35
	
	// Timer3 init
	// timer freq =16000000/64 = 250000Hz
	TCCR3B |= 1<<0; 
 11e:	a1 e9       	ldi	r26, 0x91	; 145
 120:	b0 e0       	ldi	r27, 0x00	; 0
 122:	8c 91       	ld	r24, X
 124:	81 60       	ori	r24, 0x01	; 1
 126:	8c 93       	st	X, r24
	TCCR3B |= 1<<1;
 128:	8c 91       	ld	r24, X
 12a:	82 60       	ori	r24, 0x02	; 2
 12c:	8c 93       	st	X, r24
	
	// Fast PWM top 1023
	TCCR3A |= 1;
 12e:	e0 e9       	ldi	r30, 0x90	; 144
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	81 60       	ori	r24, 0x01	; 1
 136:	80 83       	st	Z, r24
	TCCR3A |= 1<<1;
 138:	80 81       	ld	r24, Z
 13a:	82 60       	ori	r24, 0x02	; 2
 13c:	80 83       	st	Z, r24
	TCCR3B |= 1<<3;
 13e:	8c 91       	ld	r24, X
 140:	88 60       	ori	r24, 0x08	; 8
 142:	8c 93       	st	X, r24
	
	// Timer4 init
	// timer freq =16000000/64 = 250000Hz
	TCCR4B |= 1<<0;
 144:	c1 ea       	ldi	r28, 0xA1	; 161
 146:	d0 e0       	ldi	r29, 0x00	; 0
 148:	88 81       	ld	r24, Y
 14a:	81 60       	ori	r24, 0x01	; 1
 14c:	88 83       	st	Y, r24
	TCCR4B |= 1<<1;
 14e:	88 81       	ld	r24, Y
 150:	82 60       	ori	r24, 0x02	; 2
 152:	88 83       	st	Y, r24
		
	// Fast PWM top 1023
	TCCR4A |= 1;
 154:	a0 ea       	ldi	r26, 0xA0	; 160
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	8c 91       	ld	r24, X
 15a:	81 60       	ori	r24, 0x01	; 1
 15c:	8c 93       	st	X, r24
	TCCR4A |= 1<<1;
 15e:	8c 91       	ld	r24, X
 160:	82 60       	ori	r24, 0x02	; 2
 162:	8c 93       	st	X, r24
	TCCR4B |= 1<<3;
 164:	88 81       	ld	r24, Y
 166:	88 60       	ori	r24, 0x08	; 8
 168:	88 83       	st	Y, r24
	
	// PWM0 PWM2 PMW4 INVERTING
	TCCR4A|=1<<7;
 16a:	8c 91       	ld	r24, X
 16c:	80 68       	ori	r24, 0x80	; 128
 16e:	8c 93       	st	X, r24
	TCCR4A|=1<<6;
 170:	8c 91       	ld	r24, X
 172:	80 64       	ori	r24, 0x40	; 64
 174:	8c 93       	st	X, r24
	TCCR4A|=1<<5;
 176:	8c 91       	ld	r24, X
 178:	80 62       	ori	r24, 0x20	; 32
 17a:	8c 93       	st	X, r24
	TCCR4A|=1<<4;
 17c:	8c 91       	ld	r24, X
 17e:	80 61       	ori	r24, 0x10	; 16
 180:	8c 93       	st	X, r24
	TCCR4A|=1<<3;
 182:	8c 91       	ld	r24, X
 184:	88 60       	ori	r24, 0x08	; 8
 186:	8c 93       	st	X, r24
	TCCR4A|=1<<2;
 188:	8c 91       	ld	r24, X
 18a:	84 60       	ori	r24, 0x04	; 4
 18c:	8c 93       	st	X, r24
	
	// PWM1 PWM3 PWM5 NON-INVERTING
	TCCR3A|=1<<7;
 18e:	80 81       	ld	r24, Z
 190:	80 68       	ori	r24, 0x80	; 128
 192:	80 83       	st	Z, r24
	TCCR3A&=~(1<<6);
 194:	80 81       	ld	r24, Z
 196:	8f 7b       	andi	r24, 0xBF	; 191
 198:	80 83       	st	Z, r24
	TCCR3A|=1<<5;
 19a:	80 81       	ld	r24, Z
 19c:	80 62       	ori	r24, 0x20	; 32
 19e:	80 83       	st	Z, r24
	TCCR3A&=~(1<<4);
 1a0:	80 81       	ld	r24, Z
 1a2:	8f 7e       	andi	r24, 0xEF	; 239
 1a4:	80 83       	st	Z, r24
	TCCR3A|=1<<3;
 1a6:	80 81       	ld	r24, Z
 1a8:	88 60       	ori	r24, 0x08	; 8
 1aa:	80 83       	st	Z, r24
	TCCR3A&=~(1<<2);
 1ac:	80 81       	ld	r24, Z
 1ae:	8b 7f       	andi	r24, 0xFB	; 251
 1b0:	80 83       	st	Z, r24
	
	// START THE TIMER SYNC
	GTCCR=0;
 1b2:	13 bc       	out	0x23, r1	; 35
}
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	08 95       	ret

000001ba <_ZN8CAvrBldc7executeEj>:
	
}


inline uint8_t CAvrBldc::halRead(){
	return PINB & 0x07;
 1ba:	83 b1       	in	r24, 0x03	; 3
	// START THE TIMER SYNC
	GTCCR=0;
}

void CAvrBldc::execute(uint16_t pwm){
	switch(halRead()){
 1bc:	87 70       	andi	r24, 0x07	; 7
 1be:	83 30       	cpi	r24, 0x03	; 3
 1c0:	89 f0       	breq	.+34     	; 0x1e4 <_ZN8CAvrBldc7executeEj+0x2a>
 1c2:	38 f4       	brcc	.+14     	; 0x1d2 <_ZN8CAvrBldc7executeEj+0x18>
 1c4:	81 30       	cpi	r24, 0x01	; 1
 1c6:	09 f4       	brne	.+2      	; 0x1ca <_ZN8CAvrBldc7executeEj+0x10>
 1c8:	44 c0       	rjmp	.+136    	; 0x252 <_ZN8CAvrBldc7executeEj+0x98>
 1ca:	82 30       	cpi	r24, 0x02	; 2
 1cc:	09 f4       	brne	.+2      	; 0x1d0 <_ZN8CAvrBldc7executeEj+0x16>
 1ce:	1d c1       	rjmp	.+570    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 1d0:	08 95       	ret
 1d2:	85 30       	cpi	r24, 0x05	; 5
 1d4:	09 f4       	brne	.+2      	; 0x1d8 <_ZN8CAvrBldc7executeEj+0x1e>
 1d6:	74 c0       	rjmp	.+232    	; 0x2c0 <_ZN8CAvrBldc7executeEj+0x106>
 1d8:	08 f4       	brcc	.+2      	; 0x1dc <_ZN8CAvrBldc7executeEj+0x22>
 1da:	a9 c0       	rjmp	.+338    	; 0x32e <_ZN8CAvrBldc7executeEj+0x174>
 1dc:	86 30       	cpi	r24, 0x06	; 6
 1de:	09 f4       	brne	.+2      	; 0x1e2 <_ZN8CAvrBldc7executeEj+0x28>
 1e0:	dd c0       	rjmp	.+442    	; 0x39c <_ZN8CAvrBldc7executeEj+0x1e2>
 1e2:	08 95       	ret
	
	switch (channel){
		case 0:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<7);
 1e4:	a0 ea       	ldi	r26, 0xA0	; 160
 1e6:	b0 e0       	ldi	r27, 0x00	; 0
 1e8:	8c 91       	ld	r24, X
 1ea:	8f 77       	andi	r24, 0x7F	; 127
 1ec:	8c 93       	st	X, r24
			TCCR4A&=~(1<<6);
 1ee:	8c 91       	ld	r24, X
 1f0:	8f 7b       	andi	r24, 0xBF	; 191
 1f2:	8c 93       	st	X, r24
		break;
		
		case 1:
		switch(mode){
			case PWM_DISABLE:
			TCCR3A&=~(1<<7);
 1f4:	e0 e9       	ldi	r30, 0x90	; 144
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 81       	ld	r24, Z
 1fa:	8f 77       	andi	r24, 0x7F	; 127
 1fc:	80 83       	st	Z, r24
			TCCR3A&=~(1<<6);
 1fe:	80 81       	ld	r24, Z
 200:	8f 7b       	andi	r24, 0xBF	; 191
 202:	80 83       	st	Z, r24
		break;

		case 2:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<5);
 204:	8c 91       	ld	r24, X
 206:	8f 7d       	andi	r24, 0xDF	; 223
 208:	8c 93       	st	X, r24
			TCCR4A&=~(1<<4);
 20a:	8c 91       	ld	r24, X
 20c:	8f 7e       	andi	r24, 0xEF	; 239
 20e:	8c 93       	st	X, r24
			TCCR3A&=~(1<<5);
			TCCR3A&=~(1<<4);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<4);
 210:	80 81       	ld	r24, Z
 212:	8f 7e       	andi	r24, 0xEF	; 239
 214:	80 83       	st	Z, r24
			TCCR3A|=1<<5;
 216:	80 81       	ld	r24, Z
 218:	80 62       	ori	r24, 0x20	; 32
 21a:	80 83       	st	Z, r24
		pwmMode(0,PWM_DISABLE);
		pwmMode(1,PWM_DISABLE);
		pwmMode(2,PWM_DISABLE);
		
		pwmMode(3,PWM_NON_INVERTING);
		PWM3=1023;
 21c:	8f ef       	ldi	r24, 0xFF	; 255
 21e:	93 e0       	ldi	r25, 0x03	; 3
 220:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
 224:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
			TCCR4A&=~(1<<2);
			TCCR4A|=1<<3;
			break;
			
			case PWM_INVERTING:
			TCCR4A|=1<<3;
 228:	8c 91       	ld	r24, X
 22a:	88 60       	ori	r24, 0x08	; 8
 22c:	8c 93       	st	X, r24
			TCCR4A|=1<<2;
 22e:	8c 91       	ld	r24, X
 230:	84 60       	ori	r24, 0x04	; 4
 232:	8c 93       	st	X, r24
		
		pwmMode(3,PWM_NON_INVERTING);
		PWM3=1023;
		
		pwmMode(4,PWM_INVERTING);
		PWM4=pwm;
 234:	70 93 ad 00 	sts	0x00AD, r23	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 238:	60 93 ac 00 	sts	0x00AC, r22	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
			TCCR3A&=~(1<<3);
			TCCR3A&=~(1<<2);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<2);
 23c:	80 81       	ld	r24, Z
 23e:	8b 7f       	andi	r24, 0xFB	; 251
 240:	80 83       	st	Z, r24
			TCCR3A|=1<<3;
 242:	80 81       	ld	r24, Z
 244:	88 60       	ori	r24, 0x08	; 8
 246:	80 83       	st	Z, r24
		PWM3=1023;
		
		pwmMode(4,PWM_INVERTING);
		PWM4=pwm;
		pwmMode(5,PWM_NON_INVERTING);
		PWM5=pwm;
 248:	70 93 9d 00 	sts	0x009D, r23	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
 24c:	60 93 9c 00 	sts	0x009C, r22	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>

		break;
 250:	08 95       	ret
		break;

		case 2:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<5);
 252:	a0 ea       	ldi	r26, 0xA0	; 160
 254:	b0 e0       	ldi	r27, 0x00	; 0
 256:	8c 91       	ld	r24, X
 258:	8f 7d       	andi	r24, 0xDF	; 223
 25a:	8c 93       	st	X, r24
			TCCR4A&=~(1<<4);
 25c:	8c 91       	ld	r24, X
 25e:	8f 7e       	andi	r24, 0xEF	; 239
 260:	8c 93       	st	X, r24
		break;

		case 4:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<3);
 262:	8c 91       	ld	r24, X
 264:	87 7f       	andi	r24, 0xF7	; 247
 266:	8c 93       	st	X, r24
			TCCR4A&=~(1<<2);
 268:	8c 91       	ld	r24, X
 26a:	8b 7f       	andi	r24, 0xFB	; 251
 26c:	8c 93       	st	X, r24
		break;
		
		case 5:
		switch(mode){
			case PWM_DISABLE:
			TCCR3A&=~(1<<3);
 26e:	e0 e9       	ldi	r30, 0x90	; 144
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	80 81       	ld	r24, Z
 274:	87 7f       	andi	r24, 0xF7	; 247
 276:	80 83       	st	Z, r24
			TCCR3A&=~(1<<2);
 278:	80 81       	ld	r24, Z
 27a:	8b 7f       	andi	r24, 0xFB	; 251
 27c:	80 83       	st	Z, r24
			TCCR3A&=~(1<<5);
			TCCR3A&=~(1<<4);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<4);
 27e:	80 81       	ld	r24, Z
 280:	8f 7e       	andi	r24, 0xEF	; 239
 282:	80 83       	st	Z, r24
			TCCR3A|=1<<5;
 284:	80 81       	ld	r24, Z
 286:	80 62       	ori	r24, 0x20	; 32
 288:	80 83       	st	Z, r24
		pwmMode(2,PWM_DISABLE);
		pwmMode(4,PWM_DISABLE);
		pwmMode(5,PWM_DISABLE);
		
		pwmMode(3,PWM_NON_INVERTING);
		PWM3=1023;
 28a:	8f ef       	ldi	r24, 0xFF	; 255
 28c:	93 e0       	ldi	r25, 0x03	; 3
 28e:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
 292:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
			TCCR4A&=~(1<<6);
			TCCR4A|=1<<7;
			break;
			
			case PWM_INVERTING:
			TCCR4A|=1<<7;
 296:	8c 91       	ld	r24, X
 298:	80 68       	ori	r24, 0x80	; 128
 29a:	8c 93       	st	X, r24
			TCCR4A|=1<<6;
 29c:	8c 91       	ld	r24, X
 29e:	80 64       	ori	r24, 0x40	; 64
 2a0:	8c 93       	st	X, r24
		
		pwmMode(3,PWM_NON_INVERTING);
		PWM3=1023;
		
		pwmMode(0,PWM_INVERTING);
		PWM0=pwm;
 2a2:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 2a6:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
			TCCR3A&=~(1<<7);
			TCCR3A&=~(1<<6);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<6);
 2aa:	80 81       	ld	r24, Z
 2ac:	8f 7b       	andi	r24, 0xBF	; 191
 2ae:	80 83       	st	Z, r24
			TCCR3A|=1<<7;
 2b0:	80 81       	ld	r24, Z
 2b2:	80 68       	ori	r24, 0x80	; 128
 2b4:	80 83       	st	Z, r24
		PWM3=1023;
		
		pwmMode(0,PWM_INVERTING);
		PWM0=pwm;
		pwmMode(1,PWM_NON_INVERTING);
		PWM1=pwm;
 2b6:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 2ba:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
		break;
 2be:	08 95       	ret
		break;

		case 2:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<5);
 2c0:	a0 ea       	ldi	r26, 0xA0	; 160
 2c2:	b0 e0       	ldi	r27, 0x00	; 0
 2c4:	8c 91       	ld	r24, X
 2c6:	8f 7d       	andi	r24, 0xDF	; 223
 2c8:	8c 93       	st	X, r24
			TCCR4A&=~(1<<4);
 2ca:	8c 91       	ld	r24, X
 2cc:	8f 7e       	andi	r24, 0xEF	; 239
 2ce:	8c 93       	st	X, r24
		break;
		
		case 3:
		switch(mode){
			case PWM_DISABLE:
			TCCR3A&=~(1<<5);
 2d0:	e0 e9       	ldi	r30, 0x90	; 144
 2d2:	f0 e0       	ldi	r31, 0x00	; 0
 2d4:	80 81       	ld	r24, Z
 2d6:	8f 7d       	andi	r24, 0xDF	; 223
 2d8:	80 83       	st	Z, r24
			TCCR3A&=~(1<<4);
 2da:	80 81       	ld	r24, Z
 2dc:	8f 7e       	andi	r24, 0xEF	; 239
 2de:	80 83       	st	Z, r24
		break;

		case 4:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<3);
 2e0:	8c 91       	ld	r24, X
 2e2:	87 7f       	andi	r24, 0xF7	; 247
 2e4:	8c 93       	st	X, r24
			TCCR4A&=~(1<<2);
 2e6:	8c 91       	ld	r24, X
 2e8:	8b 7f       	andi	r24, 0xFB	; 251
 2ea:	8c 93       	st	X, r24
			TCCR3A&=~(1<<3);
			TCCR3A&=~(1<<2);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<2);
 2ec:	80 81       	ld	r24, Z
 2ee:	8b 7f       	andi	r24, 0xFB	; 251
 2f0:	80 83       	st	Z, r24
			TCCR3A|=1<<3;
 2f2:	80 81       	ld	r24, Z
 2f4:	88 60       	ori	r24, 0x08	; 8
 2f6:	80 83       	st	Z, r24
		pwmMode(2,PWM_DISABLE);
		pwmMode(3,PWM_DISABLE);
		pwmMode(4,PWM_DISABLE);
		
		pwmMode(5,PWM_NON_INVERTING);
		PWM5=1023;
 2f8:	8f ef       	ldi	r24, 0xFF	; 255
 2fa:	93 e0       	ldi	r25, 0x03	; 3
 2fc:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
 300:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
			TCCR4A&=~(1<<6);
			TCCR4A|=1<<7;
			break;
			
			case PWM_INVERTING:
			TCCR4A|=1<<7;
 304:	8c 91       	ld	r24, X
 306:	80 68       	ori	r24, 0x80	; 128
 308:	8c 93       	st	X, r24
			TCCR4A|=1<<6;
 30a:	8c 91       	ld	r24, X
 30c:	80 64       	ori	r24, 0x40	; 64
 30e:	8c 93       	st	X, r24
		
		pwmMode(5,PWM_NON_INVERTING);
		PWM5=1023;
		
		pwmMode(0,PWM_INVERTING);
		PWM0=pwm;
 310:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 314:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
			TCCR3A&=~(1<<7);
			TCCR3A&=~(1<<6);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<6);
 318:	80 81       	ld	r24, Z
 31a:	8f 7b       	andi	r24, 0xBF	; 191
 31c:	80 83       	st	Z, r24
			TCCR3A|=1<<7;
 31e:	80 81       	ld	r24, Z
 320:	80 68       	ori	r24, 0x80	; 128
 322:	80 83       	st	Z, r24
		PWM5=1023;
		
		pwmMode(0,PWM_INVERTING);
		PWM0=pwm;
		pwmMode(1,PWM_NON_INVERTING);
		PWM1=pwm;
 324:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 328:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
		break;
 32c:	08 95       	ret
	
	switch (channel){
		case 0:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<7);
 32e:	a0 ea       	ldi	r26, 0xA0	; 160
 330:	b0 e0       	ldi	r27, 0x00	; 0
 332:	8c 91       	ld	r24, X
 334:	8f 77       	andi	r24, 0x7F	; 127
 336:	8c 93       	st	X, r24
			TCCR4A&=~(1<<6);
 338:	8c 91       	ld	r24, X
 33a:	8f 7b       	andi	r24, 0xBF	; 191
 33c:	8c 93       	st	X, r24
		break;
		
		case 1:
		switch(mode){
			case PWM_DISABLE:
			TCCR3A&=~(1<<7);
 33e:	e0 e9       	ldi	r30, 0x90	; 144
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	80 81       	ld	r24, Z
 344:	8f 77       	andi	r24, 0x7F	; 127
 346:	80 83       	st	Z, r24
			TCCR3A&=~(1<<6);
 348:	80 81       	ld	r24, Z
 34a:	8f 7b       	andi	r24, 0xBF	; 191
 34c:	80 83       	st	Z, r24
		break;

		case 4:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<3);
 34e:	8c 91       	ld	r24, X
 350:	87 7f       	andi	r24, 0xF7	; 247
 352:	8c 93       	st	X, r24
			TCCR4A&=~(1<<2);
 354:	8c 91       	ld	r24, X
 356:	8b 7f       	andi	r24, 0xFB	; 251
 358:	8c 93       	st	X, r24
			TCCR3A&=~(1<<3);
			TCCR3A&=~(1<<2);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<2);
 35a:	80 81       	ld	r24, Z
 35c:	8b 7f       	andi	r24, 0xFB	; 251
 35e:	80 83       	st	Z, r24
			TCCR3A|=1<<3;
 360:	80 81       	ld	r24, Z
 362:	88 60       	ori	r24, 0x08	; 8
 364:	80 83       	st	Z, r24
		pwmMode(0,PWM_DISABLE);
		pwmMode(1,PWM_DISABLE);
		pwmMode(4,PWM_DISABLE);
		
		pwmMode(5,PWM_NON_INVERTING);
		PWM5=1023;
 366:	8f ef       	ldi	r24, 0xFF	; 255
 368:	93 e0       	ldi	r25, 0x03	; 3
 36a:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
 36e:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
			TCCR4A&=~(1<<4);
			TCCR4A|=1<<5;
			break;
			
			case PWM_INVERTING:
			TCCR4A|=1<<5;
 372:	8c 91       	ld	r24, X
 374:	80 62       	ori	r24, 0x20	; 32
 376:	8c 93       	st	X, r24
			TCCR4A|=1<<4;
 378:	8c 91       	ld	r24, X
 37a:	80 61       	ori	r24, 0x10	; 16
 37c:	8c 93       	st	X, r24
		
		pwmMode(5,PWM_NON_INVERTING);
		PWM5=1023;
		
		pwmMode(2,PWM_INVERTING);
		PWM2=pwm;
 37e:	70 93 ab 00 	sts	0x00AB, r23	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 382:	60 93 aa 00 	sts	0x00AA, r22	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
			TCCR3A&=~(1<<5);
			TCCR3A&=~(1<<4);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<4);
 386:	80 81       	ld	r24, Z
 388:	8f 7e       	andi	r24, 0xEF	; 239
 38a:	80 83       	st	Z, r24
			TCCR3A|=1<<5;
 38c:	80 81       	ld	r24, Z
 38e:	80 62       	ori	r24, 0x20	; 32
 390:	80 83       	st	Z, r24
		PWM5=1023;
		
		pwmMode(2,PWM_INVERTING);
		PWM2=pwm;
		pwmMode(3,PWM_NON_INVERTING);
		PWM3=pwm;
 392:	70 93 9b 00 	sts	0x009B, r23	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
 396:	60 93 9a 00 	sts	0x009A, r22	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
		break;
 39a:	08 95       	ret
	
	switch (channel){
		case 0:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<7);
 39c:	a0 ea       	ldi	r26, 0xA0	; 160
 39e:	b0 e0       	ldi	r27, 0x00	; 0
 3a0:	8c 91       	ld	r24, X
 3a2:	8f 77       	andi	r24, 0x7F	; 127
 3a4:	8c 93       	st	X, r24
			TCCR4A&=~(1<<6);
 3a6:	8c 91       	ld	r24, X
 3a8:	8f 7b       	andi	r24, 0xBF	; 191
 3aa:	8c 93       	st	X, r24
		break;

		case 4:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<3);
 3ac:	8c 91       	ld	r24, X
 3ae:	87 7f       	andi	r24, 0xF7	; 247
 3b0:	8c 93       	st	X, r24
			TCCR4A&=~(1<<2);
 3b2:	8c 91       	ld	r24, X
 3b4:	8b 7f       	andi	r24, 0xFB	; 251
 3b6:	8c 93       	st	X, r24
		break;
		
		case 5:
		switch(mode){
			case PWM_DISABLE:
			TCCR3A&=~(1<<3);
 3b8:	e0 e9       	ldi	r30, 0x90	; 144
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	80 81       	ld	r24, Z
 3be:	87 7f       	andi	r24, 0xF7	; 247
 3c0:	80 83       	st	Z, r24
			TCCR3A&=~(1<<2);
 3c2:	80 81       	ld	r24, Z
 3c4:	8b 7f       	andi	r24, 0xFB	; 251
 3c6:	80 83       	st	Z, r24
			TCCR3A&=~(1<<7);
			TCCR3A&=~(1<<6);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<6);
 3c8:	80 81       	ld	r24, Z
 3ca:	8f 7b       	andi	r24, 0xBF	; 191
 3cc:	80 83       	st	Z, r24
			TCCR3A|=1<<7;
 3ce:	80 81       	ld	r24, Z
 3d0:	80 68       	ori	r24, 0x80	; 128
 3d2:	80 83       	st	Z, r24
		pwmMode(0,PWM_DISABLE);
		pwmMode(4,PWM_DISABLE);
		pwmMode(5,PWM_DISABLE);
		
		pwmMode(1,PWM_NON_INVERTING);
		PWM1=1023;
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	93 e0       	ldi	r25, 0x03	; 3
 3d8:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 3dc:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
			TCCR4A&=~(1<<4);
			TCCR4A|=1<<5;
			break;
			
			case PWM_INVERTING:
			TCCR4A|=1<<5;
 3e0:	8c 91       	ld	r24, X
 3e2:	80 62       	ori	r24, 0x20	; 32
 3e4:	8c 93       	st	X, r24
			TCCR4A|=1<<4;
 3e6:	8c 91       	ld	r24, X
 3e8:	80 61       	ori	r24, 0x10	; 16
 3ea:	8c 93       	st	X, r24
		
		pwmMode(1,PWM_NON_INVERTING);
		PWM1=1023;
		
		pwmMode(2,PWM_INVERTING);
		PWM2=pwm;
 3ec:	70 93 ab 00 	sts	0x00AB, r23	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 3f0:	60 93 aa 00 	sts	0x00AA, r22	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
			TCCR3A&=~(1<<5);
			TCCR3A&=~(1<<4);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<4);
 3f4:	80 81       	ld	r24, Z
 3f6:	8f 7e       	andi	r24, 0xEF	; 239
 3f8:	80 83       	st	Z, r24
			TCCR3A|=1<<5;
 3fa:	80 81       	ld	r24, Z
 3fc:	80 62       	ori	r24, 0x20	; 32
 3fe:	80 83       	st	Z, r24
		PWM1=1023;
		
		pwmMode(2,PWM_INVERTING);
		PWM2=pwm;
		pwmMode(3,PWM_NON_INVERTING);
		PWM3=pwm;
 400:	70 93 9b 00 	sts	0x009B, r23	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
 404:	60 93 9a 00 	sts	0x009A, r22	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
		break;
 408:	08 95       	ret
	
	switch (channel){
		case 0:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<7);
 40a:	a0 ea       	ldi	r26, 0xA0	; 160
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	8c 91       	ld	r24, X
 410:	8f 77       	andi	r24, 0x7F	; 127
 412:	8c 93       	st	X, r24
			TCCR4A&=~(1<<6);
 414:	8c 91       	ld	r24, X
 416:	8f 7b       	andi	r24, 0xBF	; 191
 418:	8c 93       	st	X, r24
		break;

		case 2:
		switch(mode){
			case PWM_DISABLE:
			TCCR4A&=~(1<<5);
 41a:	8c 91       	ld	r24, X
 41c:	8f 7d       	andi	r24, 0xDF	; 223
 41e:	8c 93       	st	X, r24
			TCCR4A&=~(1<<4);
 420:	8c 91       	ld	r24, X
 422:	8f 7e       	andi	r24, 0xEF	; 239
 424:	8c 93       	st	X, r24
		break;
		
		case 3:
		switch(mode){
			case PWM_DISABLE:
			TCCR3A&=~(1<<5);
 426:	e0 e9       	ldi	r30, 0x90	; 144
 428:	f0 e0       	ldi	r31, 0x00	; 0
 42a:	80 81       	ld	r24, Z
 42c:	8f 7d       	andi	r24, 0xDF	; 223
 42e:	80 83       	st	Z, r24
			TCCR3A&=~(1<<4);
 430:	80 81       	ld	r24, Z
 432:	8f 7e       	andi	r24, 0xEF	; 239
 434:	80 83       	st	Z, r24
			TCCR3A&=~(1<<7);
			TCCR3A&=~(1<<6);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<6);
 436:	80 81       	ld	r24, Z
 438:	8f 7b       	andi	r24, 0xBF	; 191
 43a:	80 83       	st	Z, r24
			TCCR3A|=1<<7;
 43c:	80 81       	ld	r24, Z
 43e:	80 68       	ori	r24, 0x80	; 128
 440:	80 83       	st	Z, r24
		pwmMode(0,PWM_DISABLE);
		pwmMode(2,PWM_DISABLE);
		pwmMode(3,PWM_DISABLE);
		
		pwmMode(1,PWM_NON_INVERTING);
		PWM1=1023;
 442:	8f ef       	ldi	r24, 0xFF	; 255
 444:	93 e0       	ldi	r25, 0x03	; 3
 446:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 44a:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
			TCCR4A&=~(1<<2);
			TCCR4A|=1<<3;
			break;
			
			case PWM_INVERTING:
			TCCR4A|=1<<3;
 44e:	8c 91       	ld	r24, X
 450:	88 60       	ori	r24, 0x08	; 8
 452:	8c 93       	st	X, r24
			TCCR4A|=1<<2;
 454:	8c 91       	ld	r24, X
 456:	84 60       	ori	r24, 0x04	; 4
 458:	8c 93       	st	X, r24
		
		pwmMode(1,PWM_NON_INVERTING);
		PWM1=1023;
		
		pwmMode(4,PWM_INVERTING);
		PWM4=pwm;
 45a:	70 93 ad 00 	sts	0x00AD, r23	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 45e:	60 93 ac 00 	sts	0x00AC, r22	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
			TCCR3A&=~(1<<3);
			TCCR3A&=~(1<<2);
			break;
			
			case PWM_NON_INVERTING:
			TCCR3A&=~(1<<2);
 462:	80 81       	ld	r24, Z
 464:	8b 7f       	andi	r24, 0xFB	; 251
 466:	80 83       	st	Z, r24
			TCCR3A|=1<<3;
 468:	80 81       	ld	r24, Z
 46a:	88 60       	ori	r24, 0x08	; 8
 46c:	80 83       	st	Z, r24
		PWM1=1023;
		
		pwmMode(4,PWM_INVERTING);
		PWM4=pwm;
		pwmMode(5,PWM_NON_INVERTING);
		PWM5=pwm;
 46e:	70 93 9d 00 	sts	0x009D, r23	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
 472:	60 93 9c 00 	sts	0x009C, r22	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
 476:	08 95       	ret

00000478 <main>:
#include "AvrBldc.h"
#include "Serial.h"

int main(void)
{
	serial.init(57600);
 478:	40 e0       	ldi	r20, 0x00	; 0
 47a:	51 ee       	ldi	r21, 0xE1	; 225
 47c:	60 e0       	ldi	r22, 0x00	; 0
 47e:	70 e0       	ldi	r23, 0x00	; 0
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	92 e0       	ldi	r25, 0x02	; 2
 484:	09 d0       	rcall	.+18     	; 0x498 <_ZN7CSerial4initEm>
	bldc.init();
 486:	80 e0       	ldi	r24, 0x00	; 0
 488:	92 e0       	ldi	r25, 0x02	; 2
 48a:	3f de       	rcall	.-898    	; 0x10a <_ZN8CAvrBldc4initEv>
	while (1) 
    {
		//serial.putchar('a');
		//serial.print("322\r\n");
		bldc.execute(512);
 48c:	60 e0       	ldi	r22, 0x00	; 0
 48e:	72 e0       	ldi	r23, 0x02	; 2
 490:	80 e0       	ldi	r24, 0x00	; 0
 492:	92 e0       	ldi	r25, 0x02	; 2
 494:	92 de       	rcall	.-732    	; 0x1ba <_ZN8CAvrBldc7executeEj>
 496:	fa cf       	rjmp	.-12     	; 0x48c <main+0x14>

00000498 <_ZN7CSerial4initEm>:

CSerial serial;

void CSerial::init(uint32_t baudrate){
	// uart transmit enable
	UCSR1B|=1<<3;
 498:	e9 ec       	ldi	r30, 0xC9	; 201
 49a:	f0 e0       	ldi	r31, 0x00	; 0
 49c:	80 81       	ld	r24, Z
 49e:	88 60       	ori	r24, 0x08	; 8
 4a0:	80 83       	st	Z, r24
	
	uint16_t brrRegister = (16000000UL/(baudrate*16))-1;
 4a2:	db 01       	movw	r26, r22
 4a4:	ca 01       	movw	r24, r20
 4a6:	88 0f       	add	r24, r24
 4a8:	99 1f       	adc	r25, r25
 4aa:	aa 1f       	adc	r26, r26
 4ac:	bb 1f       	adc	r27, r27
 4ae:	88 0f       	add	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	aa 1f       	adc	r26, r26
 4b4:	bb 1f       	adc	r27, r27
 4b6:	9c 01       	movw	r18, r24
 4b8:	ad 01       	movw	r20, r26
 4ba:	22 0f       	add	r18, r18
 4bc:	33 1f       	adc	r19, r19
 4be:	44 1f       	adc	r20, r20
 4c0:	55 1f       	adc	r21, r21
 4c2:	22 0f       	add	r18, r18
 4c4:	33 1f       	adc	r19, r19
 4c6:	44 1f       	adc	r20, r20
 4c8:	55 1f       	adc	r21, r21
 4ca:	60 e0       	ldi	r22, 0x00	; 0
 4cc:	74 e2       	ldi	r23, 0x24	; 36
 4ce:	84 ef       	ldi	r24, 0xF4	; 244
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	09 d0       	rcall	.+18     	; 0x4e6 <__udivmodsi4>
 4d4:	21 50       	subi	r18, 0x01	; 1
 4d6:	31 09       	sbc	r19, r1
	
	UBRR1H= (brrRegister>>8)&0x0f;
 4d8:	83 2f       	mov	r24, r19
 4da:	8f 70       	andi	r24, 0x0F	; 15
 4dc:	80 93 cd 00 	sts	0x00CD, r24	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
	UBRR1L= brrRegister & 0xff;
 4e0:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 4e4:	08 95       	ret

000004e6 <__udivmodsi4>:
 4e6:	a1 e2       	ldi	r26, 0x21	; 33
 4e8:	1a 2e       	mov	r1, r26
 4ea:	aa 1b       	sub	r26, r26
 4ec:	bb 1b       	sub	r27, r27
 4ee:	fd 01       	movw	r30, r26
 4f0:	0d c0       	rjmp	.+26     	; 0x50c <__udivmodsi4_ep>

000004f2 <__udivmodsi4_loop>:
 4f2:	aa 1f       	adc	r26, r26
 4f4:	bb 1f       	adc	r27, r27
 4f6:	ee 1f       	adc	r30, r30
 4f8:	ff 1f       	adc	r31, r31
 4fa:	a2 17       	cp	r26, r18
 4fc:	b3 07       	cpc	r27, r19
 4fe:	e4 07       	cpc	r30, r20
 500:	f5 07       	cpc	r31, r21
 502:	20 f0       	brcs	.+8      	; 0x50c <__udivmodsi4_ep>
 504:	a2 1b       	sub	r26, r18
 506:	b3 0b       	sbc	r27, r19
 508:	e4 0b       	sbc	r30, r20
 50a:	f5 0b       	sbc	r31, r21

0000050c <__udivmodsi4_ep>:
 50c:	66 1f       	adc	r22, r22
 50e:	77 1f       	adc	r23, r23
 510:	88 1f       	adc	r24, r24
 512:	99 1f       	adc	r25, r25
 514:	1a 94       	dec	r1
 516:	69 f7       	brne	.-38     	; 0x4f2 <__udivmodsi4_loop>
 518:	60 95       	com	r22
 51a:	70 95       	com	r23
 51c:	80 95       	com	r24
 51e:	90 95       	com	r25
 520:	9b 01       	movw	r18, r22
 522:	ac 01       	movw	r20, r24
 524:	bd 01       	movw	r22, r26
 526:	cf 01       	movw	r24, r30
 528:	08 95       	ret

0000052a <_exit>:
 52a:	f8 94       	cli

0000052c <__stop_program>:
 52c:	ff cf       	rjmp	.-2      	; 0x52c <__stop_program>
